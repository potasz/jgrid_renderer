/* Configuration source file for non-secure client */

import java.net.SocketPermission;
import java.security.Permission;
import net.jini.discovery.LookupDiscovery;
import net.jini.lookup.ServiceDiscoveryManager;
import net.jini.security.BasicProxyPreparer;
import com.sun.jini.discovery.DiscoveryProtocolVersion;
import net.jini.core.constraint.InvocationConstraints;
import net.jini.core.constraint.InvocationConstraint;
import net.jini.discovery.DiscoveryGroupManagement;
import net.jini.discovery.*;
import net.jini.core.discovery.LookupLocator;

import com.sun.security.auth.callback.DialogCallbackHandler;
import net.jini.security.AuthenticationPermission;
import java.security.Permission;

import net.jini.core.constraint.*;
import net.jini.constraint.*;

import com.sun.jini.thread.TaskManager;

import net.jini.jeri.BasicJeriExporter;
import net.jini.jeri.tcp.TcpServerEndpoint;
import net.jini.jeri.BasicILFactory;

hu.vein.irt.jgrid.browser.Browser {

    LookupPeriodTime = 10000;

   servicePreparer = new BasicProxyPreparer(
      true,
      new BasicMethodConstraints(
         new InvocationConstraints(
            new InvocationConstraint[] {
               //Integrity.YES,
               ServerAuthentication.YES
            },
            null
         )
      ),
      new Permission[] {
         new AuthenticationPermission("* \"*\"", "connect")
      });

}// end hu.vein.irt.jgrid.browser.Browser

jgrid.core.security.auth.JGridLoginModule {
   callbackHandler = new DialogCallbackHandler();

}


/* Configuration block for the lookup discovery utility */
net.jini.discovery.LookupDiscovery {

    registrarPreparer = new BasicProxyPreparer(
   false /* verify */,
   new Permission[] {
       new SocketPermission("*:1024-", "connect")
   });

}//end net.jini.discovery.LookupDiscovery

/* Configuration block for the SDM */
net.jini.lookup.ServiceDiscoveryManager {

	cacheTaskManager = new TaskManager(30, 15000, 1.0f);

    registrarPreparer = net.jini.discovery.LookupDiscovery.registrarPreparer;

    discoveryManager = new LookupDiscoveryManager(DiscoveryGroupManagement.ALL_GROUPS, new LookupLocator[]{}, null, this);

}//end net.jini.lookup.ServiceDiscoveryManager

/* Configuration block for the GapAccessModule */
jgrid.core.discovery.GapAccessModule {

  lookupDiscoveryManager = new LookupDiscoveryManager(new String[] {""},
    				new LookupLocator[] {},
  				null);


  suspended = Boolean.FALSE;

//  gapID = new ServiceID();

//  gapAttributes =

//  gapFilter =

} // end jgrid.core.discovery.GapAccessModule

hu.vein.irt.jgrid.browser.event.AgregateEventListener {
	
	exporter = new BasicJeriExporter(TcpServerEndpoint.getInstance(55555), new BasicILFactory());
}